name: 01-Deploy-Infrastructure

on: 
  workflow_dispatch:

jobs:
  prep_matrix:
    name: Prepare Matrix
    environment: ${{ vars.OE_ENVIRONMENT }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"include\":[${{ vars.OE_AZURE_LOCATIONS }}]}"
      #run: echo "::set-output name=matrix::{\"include\":[{\"location\":\"eastus\"},{\"location\":\"eastus2\"}]}"

  deploy:
    needs: prep_matrix
    name: Deploy Infrastructure
    environment: ${{ vars.OE_ENVIRONMENT }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ${{fromJson(needs.prep_matrix.outputs.matrix)}}
        #location: [eastus, eastus2]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Azure CLI extensions to auto-install
        if: success()
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Set Environment Variables
        if: success()
        run: |
          . ./scripts/SetEnvVar.ps1
          SetEnvVar "FOO" "BAR"
        shell: pwsh

      - name: Test Matrix Location
        if: success()
        run: |
          Write-Output ${{ vars.OE_AZURE_LOCATIONS }}
          Write-Output "${{ matrix.location }}"
        shell: pwsh



      #- name: Create Resource Groups
      #  if: success()
      #  shell: pwsh
      #  run: |
      #    az group create -n -l 


      - name: Azure logout
        if: always()
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear





      #- name: Create Resource Groups
      #  if: success()
      #  run: |
      #    # ./scripts/01-deploy-infra/01-deploy-rgs.sh
      #    az group create -n "$RG_NAME_SECURITY" -l "${{ matrix.location }}"

      #- name: Deploy User-Assigned Identity
      #  if: success()
      #  run: |
      #    ./scripts/01-deploy-infra/02-deploy-uai.sh

      #- name: Deploy Network
      #  if: success()
      #  run: |
      #    ./scripts/01-deploy-infra/03-deploy-network.sh

      #- name: Make scripts executable
      #  run: |
      #    find ./scripts -type f -exec chmod +x {} \;


      #- name: Test Env Var in pwsh
      #  if: success()
      #  run: |
      #    Write-Output ${{ env.FOO }}
      #    Write-Output $env:FOO
      #  shell: pwsh

      #- name: Test Env Var in bash
      #  if: success()
      #  run: |
      #    echo ${{ env.FOO }}
      #    echo $FOO
      #  shell: bash
